#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define LIMIT 200

// Check if brackets are balanced
int checkBrackets(char *exp) {
    int balance = 0;
    for (int i = 0; exp[i] != '\0'; i++) {
        if (exp[i] == '(') balance++;
        else if (exp[i] == ')') {
            if (balance == 0) return 0;
            balance--;
        }
    }
    return (balance == 0);
}

// Simple validator
int validate(char *exp) {
    if (!checkBrackets(exp)) return 0;

    int expectOperand = 1;  // we start by expecting an operand

    for (int i = 0; exp[i] != '\0'; i++) {
        char c = exp[i];
        if (isspace(c)) continue;

        if (isalnum(c)) {          // operand
            if (!expectOperand) return 0;
            expectOperand = 0;     // next must be operator
        }
        else if (c == '+' || c == '-' || c == '*' || c == '/') {
            if (expectOperand) return 0;
            expectOperand = 1;     // next must be operand
        }
        else if (c == '(') {
            if (!expectOperand) return 0;
            expectOperand = 1;
        }
        else if (c == ')') {
            if (expectOperand) return 0;
            expectOperand = 0;
        }
        else return 0;             // invalid char
    }

    return !expectOperand;         // must end with operand
}

int main() {
    char exp[LIMIT];
    printf("Enter an expression: ");
    fgets(exp, LIMIT, stdin);
    exp[strcspn(exp, "\n")] = '\0';

    if (validate(exp))
        printf("Valid Expression\n");
    else
        printf("Invalid Expression\n");

    return 0;
}
